@model IEnumerable<MyFolder>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    ViewData["Title"] = "ملفاتى";
}
@section Styles
{
    <link rel="stylesheet" href="~/assets/plugins/datatables/datatables.bundle.css" />
    <style>
        .card-sm {
            max-width: 250px;
            margin: 0 auto;
        }

        .card-img-small {
            width: 150px;
            height: 150px;
            object-fit: cover;
        }

        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    </style>
}

<div class="alert bg-light-primary border border-primary border-3 border-dashed d-flex justify-content-between w-100 p-5 mb-10">
    <div class="d-flex align-items-center w-50">
        <div class="symbol symbol-40px me-4">
            <div class="symbol-label fs-2 fw-semibold text-success">
                <!--begin::Svg Icon | path: icons/duotune/general/gen002.svg-->
                <span class="svg-icon svg-icon-2 svg-icon-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search-heart" viewBox="0 0 16 16">
                        <path d="M6.5 4.482c1.664-1.673 5.825 1.254 0 5.018-5.825-3.764-1.664-6.69 0-5.018" />
                        <path d="M13 6.5a6.47 6.47 0 0 1-1.258 3.844q.06.044.115.098l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1-.1-.115h.002A6.5 6.5 0 1 1 13 6.5M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11" />
                    </svg>
                </span>
                <!--end::Svg Icon-->
            </div>
        </div>
        <div class="w-100">
            <input type="text" id="searchInput" class="form-control w-100" placeholder="ابحث عن مجلد..." onkeyup="filterCards()">
        </div>

        <!--end::Content-->
    </div>
    <div>
        <a asp-action="CreateFolder" class="btn btn-sm btn-primary">
            <i class="bi bi-plus-square-dotted"></i>
            اضافه مجلد
        </a>
    </div>
</div>
<div class="row" id="cardContainer">
    @foreach (var item in Model)
    {
        <div class="col-md-3 card-item">
            <div class="card card-sm mb-4 shadow-sm text-center">
                <a href="javascript:;" class="mt-1 js-open-folder"
                   data-url="/MyFolder/Open/@item.Id" data-update="true" data-errormessage="هذا المسار غير متوفر">
                    فتح المجلد
                    <img src="\assets\images\blue-file-folder.png" class="card-img-small rounded-circle mx-auto d-block" alt="@item.FolderName" />
                </a>
                <div class="card-body p-0">
                    <h6 id="@item.Id" class="card-title text-truncate"
                        data-toggle="tooltip" data-placement="top" title="@item.FolderName">
                        @GetTruncatedText(item.FolderName, 4)
                    </h6>
                    <a href="javascript:;" class="btn btn-outline-danger btn-sm js-confirm"
                       data-title="حذف" data-url="/MyFolder/Delete/@item.Id" data-update="true" data-message="هل متأكد من حذف هذالمجلد؟">
                        حذف
                    </a>

                    <a asp-action="EditFolder" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                        تعديل
                    </a>
                </div>
            </div>
        </div>
    }
</div>

<input type="hidden" name="__RequestVerificationToken" value="@antiforgery.GetAndStoreTokens(Context).RequestToken" />

@section Plugins
{
    <script src="~/assets/plugins/datatables/datatables.bundle.js"></script>
}

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />

    <script>
        function filterCards() {
            var input, filter, cards, cardContainer, title, i;
            input = document.getElementById("searchInput");
            filter = input.value.toLowerCase();
            cardContainer = document.getElementById("cardContainer");
            cards = cardContainer.getElementsByClassName("card-item");

            for (i = 0; i < cards.length; i++) {
                title = cards[i].getElementsByClassName("card-title")[0].getAttribute("title");
                if (title.toLowerCase().indexOf(filter) > -1) {
                    cards[i].style.display = "";
                } else {
                    cards[i].style.display = "none";
                }
            }
        }
    </script>
}

@functions {
    public string GetTruncatedText(string text, int wordLimit)
    {
        if (string.IsNullOrWhiteSpace(text)) return text;

        var words = text.Split(' ');
        if (words.Length <= wordLimit) return text;

        return string.Join(' ', words.Take(wordLimit)) + " ...";
    }
}
